#include config
#include GameModes/regular
#include GameModes/allneutrals
#include GameModes/allrandom

function getCards()
    cards = {}

    	for _,card in ipairs(self.getObjects()) do
	        script = card.gm_notes
	        if script != '' then
	            data = JSON.decode(script)
	            cards[card.guid] = data
	        end
	    end

    return cards
end

function incOffset(xoffset, yoffset)
    if xoffset > 14 then
        yoffset = yoffset+5
        xoffset = 0
    else
        xoffset = xoffset+4
    end
    return xoffset, yoffset
end

function dealCards(guids)
    cardsToGroup = {}
    xoffset = 0
    yoffset = 0

    for _, guid in ipairs(guids) do
        cardsToGroup[#cardsToGroup+1] = self.takeObject({
            guid = guid,
            position = {-39.2 + xoffset, 1.5, -0.35 - yoffset}
        })
        	xoffset, yoffset = incOffset(xoffset, yoffset)
    end

    function finalGroup()
        groupedCards = group(cardsToGroup)

        function finalDeal()
            deck = groupedCards[1]
            deck.shuffle()
            deck.shuffle()
            deck.shuffle()
            for _,player in ipairs(getSeatedPlayers()) do
                deck.deal(1, player)
            end

            destroyObject(self)
        end

        Timer.create({
            identifier = tostring({}),
            function_name = 'finalDeal',
            function_owner = self,
            delay = 1,
            repetitions = 1
        })
    end

    Timer.create({
        identifier = tostring({}),
        function_name = 'finalGroup',
        function_owner = self,
        delay = 1,
        repetitions = 1
    })
end

function shuffleDecks()
    getObjectFromGUID('62a7a0').shuffle()
    getObjectFromGUID('96fa0d').shuffle()
    getObjectFromGUID('212f10').shuffle()
end

function dealAreaCards()
    area_cards = getObjectFromGUID('26621c')
    area_cards.shuffle()

    game_board = getObjectFromGUID('ed0d18')
    for _,snappoint in ipairs(game_board.getSnapPoints()) do
        area_card = area_cards.takeObject({
            position = game_board.positionToWorld(snappoint.position),
            rotation = { snappoint.rotation.x, snappoint.rotation.y + 180, snappoint.rotation.z }
        })
        area_card.setLock(true)
    end
end

function startGame(params)
    playerCount = params.playerCount
    cardsToUse = params.cardsToUse
    gameMode = params.gameMode

    modeName = 'regular'
    for name,use in pairs(gameMode) do
        if use then modeName = name end
    end
    modeModule = modeModules[modeName]

    if not modeModule.validatePlayerCount(playerCount) then
        return false
    end

	cards = getCards()

    picks = modeModule.getGuidsByLetter(cards, cardsToUse)
    teamCounts = modeModule.getTeamCounts(playerCount)

    if not modeModule.validateCardCount(teamCounts, picks) then
        return false
    end

    guids = modeModule.getGuidsToUse(teamCounts, picks)

    dealCards(guids)

    shuffleDecks()
    dealAreaCards()

    return true
end
